basePath: /
definitions:
  domain.AddAuthorBookRequest:
    properties:
      book_name:
        type: string
      price:
        type: integer
      title:
        type: string
    type: object
  domain.Book:
    properties:
      author_id:
        type: integer
      book_name:
        type: string
      created_at:
        type: string
      id:
        type: integer
      price:
        type: integer
      title:
        type: string
    type: object
  domain.CreateAuthorRequest:
    properties:
      email:
        type: string
      name:
        type: string
      phone_number:
        type: string
    type: object
  domain.CreateBookRequest:
    properties:
      author_id:
        type: integer
      book_name:
        type: string
      created_at:
        type: string
      price:
        type: integer
      title:
        type: string
    type: object
  domain.DetailBook:
    properties:
      author_id:
        type: integer
      author_name:
        type: string
      book_name:
        type: string
      created_at:
        type: string
      id:
        type: integer
      price:
        type: integer
      title:
        type: string
    type: object
  domain.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  domain.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  domain.UpdateBookRequest:
    properties:
      author_id:
        type: integer
      book_name:
        type: string
      id:
        type: integer
      price:
        type: integer
      title:
        type: string
    type: object
  helper.JSONResponse:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Inventory Service API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Inventory Service API
  version: "1.0"
paths:
  /inventorysvc/auth/login:
    post:
      consumes:
      - application/json
      description: login user
      parameters:
      - description: login data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.JSONResponse'
      summary: login user
      tags:
      - auth
  /inventorysvc/auth/register:
    post:
      consumes:
      - application/json
      description: register user
      parameters:
      - description: register data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.JSONResponse'
      summary: register user
      tags:
      - auth
  /inventorysvc/managements/author:
    post:
      consumes:
      - application/json
      description: create new author
      parameters:
      - description: data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.CreateAuthorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.JSONResponse'
      security:
      - ApiKeyAuth: []
      summary: create new author
      tags:
      - author
  /inventorysvc/managements/author/{id}:
    post:
      consumes:
      - application/json
      description: add author book
      parameters:
      - description: author id
        in: path
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.AddAuthorBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.JSONResponse'
      summary: add author book
      tags:
      - author
  /inventorysvc/managements/author/{id}/books/{bookid}:
    delete:
      consumes:
      - application/json
      description: get list book by author
      parameters:
      - description: author id
        in: path
        name: id
        required: true
        type: string
      - description: book id
        in: path
        name: bookid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.JSONResponse'
      summary: get list book by author
      tags:
      - author
  /inventorysvc/managements/author/{id}/list:
    get:
      consumes:
      - application/json
      description: get list book by author
      parameters:
      - description: author id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.JSONResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.Book'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.JSONResponse'
      summary: get list book by author
      tags:
      - author
  /inventorysvc/managements/book:
    post:
      consumes:
      - application/json
      description: add book
      parameters:
      - description: data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.CreateBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.JSONResponse'
      summary: add book
      tags:
      - book
  /inventorysvc/managements/book/{id}:
    delete:
      consumes:
      - application/json
      description: delete book
      parameters:
      - description: book id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.JSONResponse'
      summary: delete book
      tags:
      - book
    get:
      consumes:
      - application/json
      description: get detail book
      parameters:
      - description: book id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/domain.DetailBook'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.JSONResponse'
      summary: get detail book
      tags:
      - book
    post:
      consumes:
      - application/json
      description: update book
      parameters:
      - description: book id
        in: path
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.JSONResponse'
      summary: update book
      tags:
      - book
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: authorization
    type: apiKey
swagger: "2.0"
